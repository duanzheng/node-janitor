name: release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-macos:
    name: macOS signed & notarized DMG (${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]

    env:
      # Electron Forge reads these inside forge.config.js
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      CSC_NAME: ${{ secrets.MAC_CSC_NAME }}
      # Keychain password used for a temporary keychain on the runner
      KEYCHAIN_PASSWORD: ${{ secrets.MAC_KEYCHAIN_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Import signing certificate into temporary keychain
        if: ${{ env.CSC_NAME != '' }}
        env:
          SIGNING_CERT_BASE64: ${{ secrets.MAC_SIGNING_CERT_BASE64 }}
          SIGNING_CERT_PASSWORD: ${{ secrets.MAC_SIGNING_CERT_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ env.KEYCHAIN_PASSWORD }}
        run: |
          set -euxo pipefail
          KEYCHAIN_PATH="$RUNNER_TEMP/build.keychain-db"
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

          # Import Developer ID Application .p12
          echo "$SIGNING_CERT_BASE64" | base64 --decode > "$RUNNER_TEMP/cert.p12"
          security import "$RUNNER_TEMP/cert.p12" -k "$KEYCHAIN_PATH" -P "$SIGNING_CERT_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security

          # Ensure codesign can find the certificate in this keychain
          security list-keychains -d user -s "$KEYCHAIN_PATH" $(security list-keychains -d user | sed 's/["[:space:]]//g')
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

      - name: Build signed & notarized DMG for ${{ matrix.arch }}
        run: |
          # Build for explicit arch to avoid CI host-arch only artifacts
          yarn make --arch=${{ matrix.arch }}

      - name: Show produced files
        run: |
          echo "Artifacts under out/make:"
          find out/make -type f | sed 's/^/  /'

      - name: Upload artifact (DMG)
        uses: actions/upload-artifact@v4
        with:
          name: node-janitor-macos-${{ matrix.arch }}
          # Electron Forge DMG names include productName; match both arch outputs
          path: |
            out/make/**/Node*Janitor*.dmg
            out/make/**/node*janitor*.dmg

  release:
    needs: build-macos
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Create GitHub Release and upload DMGs
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist-artifacts/**/**.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
